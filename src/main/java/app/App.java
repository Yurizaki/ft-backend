package app;


import java.io.IOException;
import java.util.ArrayList;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
/**
 * This Java source file was generated by the Gradle 'init' task.
 */

@SpringBootApplication
public class App {
	public static void main(String[] args) {
		SpringApplication.run(App.class, args);
	}

	public static String execute(String fundTicker) {
		try {
			Document doc = Jsoup.connect(Constants.FT_HOLDINGS_URL + fundTicker).get();
			String fundName = doc.title();

			Elements moduleDivs = doc.select(Constants.FT_HOLDINGS_MODULE_SELECTOR);
			if (!moduleDivs.is("div")) {
				App.handleError(Constants.ERR_HOLDINGS_DIV_NOT_FOUND);
			}
			if (moduleDivs.size() <= 0) {
			}

			Element holdingsDiv = moduleDivs.get(2);
			if (!holdingsDiv.is("div")) {
			}

			Element holdingsTable = holdingsDiv.child(1);
			if (!holdingsDiv.is("table")) {
			}

			Element holdingsTableBody = holdingsTable.child(1);

			ArrayList<Holding> holdingsList = new ArrayList<Holding>();
			for (int i = 0; i < holdingsTableBody.childrenSize(); i++) {
				Element row = holdingsTableBody.child(i);

				String holdingName = row.child(0).text().split(":")[0];
				String yearChange = row.child(1).text();
				String holdingWeight = row.child(2).text();

				Holding holding = new Holding(holdingName, yearChange, holdingWeight);
				holdingsList.add(holding);
				//System.out.printf("Company: %s -- 1 Year Change: %s -- Portfolio Weight: %s\n", holdingName, yearChange, holdingWeight);
			}


			Fund fund = new Fund(fundName, fundTicker, holdingsList);


			ObjectMapper mapper = new ObjectMapper();
			String jsonStr;
			try {
				jsonStr = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(fund);
				System.out.println(jsonStr);
				return jsonStr;
			}
			catch (JsonProcessingException e) {
				e.printStackTrace();
			}
			return null;
		}
		catch (IOException e) {
			e.printStackTrace();
		}

		return null;
	}

	public static void handleError(String error) {
		System.out.println("###################");
		System.out.println(error);
		System.out.println("###################");
	}
}
